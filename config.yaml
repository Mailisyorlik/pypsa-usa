# SPDX-FileCopyrightText: : 2017-2020 The PyPSA-Eur Authors
#
# SPDX-License-Identifier: CC0-1.0

logging:
  level: INFO
  format: '%(levelname)s:%(name)s:%(message)s'

enable:
  retrieve_data: true

renewable_techs: ["wind", "solar","hydro","wind_offshore"]

costs:
  year: 2030
  discountrate: 0.07 # From a Lion Hirth paper, also reflects average of Noothout et al 2016
  USD2013_to_EUR2013: 0.7532 # [EUR/USD] ECB: https://www.ecb.europa.eu/stats/exchange/eurofxref/html/eurofxref-graph-usd.en.html
  marginal_cost:
    solar: 0.01
    hydro: 0.
#    wind: 0.
    H2: 0.
    battery: 0.
    battery inverter: 0.
  emission_prices: # in currency per tonne emission, only used with the option Ep
    co2: 100.

electricity:
  voltages: [230., 345., 500., 765.]
  co2limit: 1.4728e+9 # 0.8 * 1.841e+9
  co2base: 1.841e+9 #base_from_2020 Locations of the 1,841 MMmt of CO2 emissions from the current state of the grid in 2020.

  extendable_carriers:
    Generator: []
    StorageUnit: [battery, H2] #battery, H2
    Store: [battery, H2]
    Link: [H2 pipeline]

  max_hours:
    battery: 6
    H2: 168

  powerplants_filter: false # use pandas query strings here, e.g. Country not in ['Germany']
  custom_powerplants: false # use pandas query strings here, e.g. Country in ['Germany']
  conventional_carriers: [coal, gas, nuclear,oil] # [nuclear, oil, OCGT, CCGT, coal, lignite, geothermal, biomass]
  renewable_capacities_from_OPSD: [hydro, wind, solar, geothermal, wind_offshore]

solving:
  options:
    formulation: kirchhoff
    load_shedding: false
    noisy_costs: true
    min_iterations: 4
    max_iterations: 6
    clip_p_max_pu: 0.01
    skip_iterations: false
    track_iterations: false
  solver:
    name: gurobi
    threads: 4
    method: 2 # barrier
    crossover: 0
    BarConvTol: 1.e-5
    FeasibilityTol: 1.e-6
    AggFill: 0
    PreDual: 0
    GURO_PAR_BARDENSETHRESH: 200
